// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Backend.Models;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(StockMarketContext))]
    partial class StockMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<float?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int")
                        .HasColumnName("StockID");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserNatId")
                        .HasColumnType("varchar(14)");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex("StockId");

                    b.HasIndex("UserNatId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Backend.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .HasColumnType("int")
                        .HasColumnName("StockID");

                    b.Property<float?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("StockName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stockName");

                    b.HasKey("StockId")
                        .HasName("PRIMARY");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<string>("NatId")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("NatID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userPassword");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("NatId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserName" }, "idx_user_name");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.HasOne("Backend.Models.Stock", "Stock")
                        .WithMany("Orders")
                        .HasForeignKey("StockId")
                        .HasConstraintName("orders_ibfk_1");

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNatId");

                    b.Navigation("Stock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Stock", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
